services:
  elasticsearch:
      image: docker.elastic.co/elasticsearch/elasticsearch:7.8.0
      container_name: elasticsearch
      ports:
        - 9200:9200
        - 9300:9300
      environment:
        discovery.type: single-node

  kibana:
      image: docker.elastic.co/kibana/kibana:7.8.0
      ports:
        - 5601:5601
      links:
        - elasticsearch
      depends_on:
        - elasticsearch

  filebeat:
      image: docker.elastic.co/beats/filebeat:7.8.0
      volumes:
        - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
        - web_log_data:/usr/share/filebeat/logs
      environment:
        ELASTICSEARCH_URL: http://elasticsearch:9200
      links:
        - kibana
        - elasticsearch
      depends_on:
        - elasticsearch

  prometheus:
    image: prom/prometheus
    restart: 'no'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - 9090:9090
    network_mode: host
  
  grafana:
    image: grafana/grafana
    environment:
      GF_INSTALL_PLUGINS: "grafana-clock-panel,grafana-simple-json-datasource"
    restart: 'no'
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - 3000:3000
    depends_on:
      - prometheus
    network_mode: host

  web:
    build: .
    command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]
    image: django_chat
    ports:
      - 8000:8000
    environment:
      DEBUG: 1
      SECRET_KEY: w1w&r-^4jf6!q7x(c!9s)qwvlq!%*%wf4*b8%fn#vu@oux759*
      DJANGO_ALLOWED_HOSTS: localhost 127.0.0.1 [::1]
      CSFR_TRUSTED_ORIGINS: http://localhost:1337
      SQL_ENGINE: django.db.backends.postgresql
      SQL_DATABASE: django_chat_db
      SQL_USER: admin
      SQL_PASSWORD: password
      SQL_HOST: db
      SQL_PORT: 5432
      REDIS_HOST: "redis"
      REDIS_PORT: 6379
      REDIS_PASSWORD: "test"
      ACS_CONNECTION_STRING: # Add your Azure Communication Services connection string here
      ACS_SENDER_EMAIL: # Add your Azure Communication Services sender email here
      USE_S3: "False"
      AWS_ACCESS_KEY_ID: # Add your AWS access key ID here
      AWS_SECRET_ACCESS_KEY: # Add your AWS secret access key here
      AWS_STORAGE_BUCKET_NAME: # Add your AWS storage bucket name here
    volumes:
      - web_log_data:/usr/src/app/logs
      - static_volume:/home/app/web/staticfiles
    depends_on:
      - db
      - redis

  db:
    image: postgres:16
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: django_chat_db

  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    expose:
      - "6379"
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"
    environment:
      REDIS_PASSWORD: test

volumes:
  postgres_data:
  web_log_data:
  prometheus_data:
  grafana_data:
  static_volume: