apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-chat-api
  labels:
    app: django-chat
spec:
  replicas: 1
  selector:
    matchLabels:
      name: django-chat-api
  template:
    metadata:
      labels:
        name: django-chat-api
    spec:
      containers:
        - name: django-chat-api
          image: "tokhna/django_chat:${RELEASE_VERSION}"
          args:
            - "gunicorn"
            - "-b"
            - "0.0.0.0:8000"
            - "django_chat.wsgi:application"
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
          volumeMounts:
            - mountPath: "/home/app/web/logs"
              name: api-logs
          envFrom:
            - secretRef:
                name: django-chat-secrets      
      volumes:
        - name: api-logs
          persistentVolumeClaim:
            claimName: api-logs-volume-claim
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-chat-websockets
  labels:
    app: django-chat
spec:
  replicas: 1
  selector:
    matchLabels:
      name: django-chat-websockets
  template:
    metadata:
      labels:
        name: django-chat-websockets
    spec:
      containers:
        - name: django-chat-websockets
          image: "tokhna/django_chat:${RELEASE_VERSION}"
          command:
            - "gunicorn"
            - "-b"
            - "0.0.0.0:8000"
            -  "django_chat.asgi:application"
            - "-k"
            - "uvicorn.workers.UvicornWorker"
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
          volumeMounts:
            - mountPath: "/home/app/web/logs"
              name: ws-logs
          envFrom:
            - secretRef:
                name: django-chat-secrets
      volumes:
        - name: ws-logs
          persistentVolumeClaim:
            claimName: ws-logs-volume-claim
---
# START Service
apiVersion: v1
kind: Service
metadata:
  name: django-chat-api
  labels:
    app: django-chat
spec:
  ports:
    - port: 8000 #port that the service exposes
      targetPort: 8000 #port that the app is receiving requests from via the pod
  selector:
    name: django-chat-api
# END SERVICE
---
# START Service
apiVersion: v1
kind: Service
metadata:
  name: django-chat-websockets
  labels:
    app: django-chat
spec:
  ports:
    - port: 8000 #port that the service exposes
      targetPort: 8000 #port that the app is receiving requests from via the pod
  selector:
    name: django-chat-websockets
# END SERVICE
